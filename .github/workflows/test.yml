name: "test"
on:
  pull_request:
    types: [synchronize]
permissions:
  contents: read
  issues: write
  pull-requests: write
jobs:
  cypress-tests-check:
    needs: [check-translation, check-prettierx]
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: ðŸšš Get node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: install dependencies
        run: |
          ## Need to unshallow to allow making the version number from
          ## git history.
          git fetch --unshallow --tags &&
          npm install
      - name: ðŸ”¨ Config
        run: |
          rm public/config.sample.json
          export GITHUB_REF_NAME=dev3
          echo "{
            \"appName\": \"Monujo-CI-${GITHUB_REF_NAME}\",
            \"lokapiDb\": \"odoo\",
            \"lokapiHost\": \"${GITHUB_REF_NAME}.lokavaluto.fr\",
            \"mapUrl\": \"https://carte.${GITHUB_REF_NAME}.lokavaluto.fr\",
            \"logoUrl\": \"https://monujo.${GITHUB_REF_NAME}.lokavaluto.fr/img/logo.png\",
            \"loginLogoUrl\": \"https://monujo.${GITHUB_REF_NAME}.lokavaluto.fr/img/logo.png\",
            \"locales\": {
              \"availableLanguages\": {
                \"en-US\": {
                  \"label\": \"English (US)\"
                },
                \"fr-FR\": {
                  \"label\": \"FranÃ§ais (France)\",
                  \"url\": \"https://docker.0k.io/downloads/monujo.fr-FR.json\"
                }
              },
              \"appStringsLanguage\": \"en-US\",
              \"defaultLanguage\": \"en-US\",
              \"preferNavigatorLanguage\": true
            }
          }" > public/config.json
          cat public/config.json
      - name: run server
        run: npm run serve &
      - name: run cypress test
        run: npx cypress run --project test
      - name: Prepare reports
        if: always()
        id: test_report
        run: |
          REPORTS_PATH='test/cypress/reports/mocha'
          npm i mochawesome-merge mochawesome-report-generator &&
          npx mochawesome-merge "$REPORTS_PATH"/*.json -o "$REPORTS_PATH"/index.json &&
          npx marge  --charts=true --showPassed=false --saveJson --reportFilename=report-merge  -o  "$REPORTS_PATH"  "$REPORTS_PATH"/index.json
      - name: Cypress report
        uses: dmitry/cypress-report-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pathname: test/cypress/reports/mocha/report-merge.json
  check-translation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          git fetch --unshallow --tags &&
          npm install &&
          sudo apt install gettext
      - name: Check gettext translation
        id: translation
        run: |
          npm run gettext:extract
          out=$(git diff --exit-code -- src/i18n/) && exit 0
          echo "$out"
          comment_diff=$(echo "$out" | egrep -v '^(---|\+\+\+) ' | egrep '^(\+|-)' | egrep -v '^(\+|-)#: ') || true
          if [ -z "$comment_diff" ]; then
            comment_diff=$(git diff -- src/i18n/fr-FR/  | egrep -v '^(---|\+\+\+) ' | egrep '^(\+|-)' | egrep '^\+#: ' | cut -f 2 -d " " | cut -f 1 -d : | sort | uniq -c)
            message='It looks like there are no "fuzzy" lines in the code, but the PO file needs to be updated. Please run the command npm run gettext:extract before pushing the code to ensure that all necessary translations are included and the PO file is up-to-date.'
          else
            message='It looks like there are some parts of the code that were not translated. Please run the command npm run gettext:extract before pushing the code to ensure that all necessary translations are included.'
          fi
          short_stat=$(git diff --shortstat -- src/i18n/)
          cat <<BASHEOF >> $GITHUB_OUTPUT
          result<<EOF

          <p>

          $message

          </p>

          <details>
          <summary>$short_stat</summary>
          <p>

          \`\`\`diff
          $comment_diff
          \`\`\`

          </p>
          </details>
          EOF
          BASHEOF
          exit 1
      - name: Comment PR
        if: ${{ failure() }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Translation report
          recreate: true
          message: |
            ## :x: Translation report:
            ${{steps.translation.outputs.result}}
  check-prettierx:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          git fetch --unshallow --tags &&
          npm install
      - name: Check prettierx
        id: linter
        run: |
          npx prettierx -w src/
          out=$(git diff --exit-code --stat -p -- src) && exit 0
          echo "$out"
          short_stat=$(git diff --shortstat -- src)
          cat <<BASHEOF >> $GITHUB_OUTPUT
          result<<EOF

          <details>
              <summary>$short_stat</summary>
          <p>

          \`\`\`diff
          $out
          \`\`\`

          </p>

          </details>
          EOF
          BASHEOF
          exit 1
      - name: Comment PR
        if: ${{ failure() }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Linter report
          recreate: true
          message: |
            ## :x: Linter report

            It seems your code wasn't properly formatted using our current rules.

            You can solve these problem by executing `npx prettierx -w src/`.

            The following shows you the missing modification so that the linter
            will be happy.

            ${{steps.linter.outputs.result}}
